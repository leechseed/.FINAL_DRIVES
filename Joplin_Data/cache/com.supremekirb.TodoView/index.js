(()=>{"use strict";var e={143:(e,t)=>{var o,n,i,a,d,l,r,s,u,c;Object.defineProperty(t,"__esModule",{value:!0}),t.ContentScriptType=t.SettingStorage=t.AppType=t.SettingItemSubType=t.SettingItemType=t.ToolbarButtonLocation=t.isContextMenuItemLocation=t.MenuItemLocation=t.ModelType=t.ImportModuleOutputFormat=t.FileSystemItem=void 0,(c=t.FileSystemItem||(t.FileSystemItem={})).File="file",c.Directory="directory",(u=t.ImportModuleOutputFormat||(t.ImportModuleOutputFormat={})).Markdown="md",u.Html="html",(s=t.ModelType||(t.ModelType={}))[s.Note=1]="Note",s[s.Folder=2]="Folder",s[s.Setting=3]="Setting",s[s.Resource=4]="Resource",s[s.Tag=5]="Tag",s[s.NoteTag=6]="NoteTag",s[s.Search=7]="Search",s[s.Alarm=8]="Alarm",s[s.MasterKey=9]="MasterKey",s[s.ItemChange=10]="ItemChange",s[s.NoteResource=11]="NoteResource",s[s.ResourceLocalState=12]="ResourceLocalState",s[s.Revision=13]="Revision",s[s.Migration=14]="Migration",s[s.SmartFilter=15]="SmartFilter",s[s.Command=16]="Command",function(e){e.File="file",e.Edit="edit",e.View="view",e.Note="note",e.Tools="tools",e.Help="help",e.Context="context",e.NoteListContextMenu="noteListContextMenu",e.EditorContextMenu="editorContextMenu",e.FolderContextMenu="folderContextMenu",e.TagContextMenu="tagContextMenu"}(o=t.MenuItemLocation||(t.MenuItemLocation={})),t.isContextMenuItemLocation=function(e){return[o.Context,o.NoteListContextMenu,o.EditorContextMenu,o.FolderContextMenu,o.TagContextMenu].includes(e)},(r=t.ToolbarButtonLocation||(t.ToolbarButtonLocation={})).NoteToolbar="noteToolbar",r.EditorToolbar="editorToolbar",(l=t.SettingItemType||(t.SettingItemType={}))[l.Int=1]="Int",l[l.String=2]="String",l[l.Bool=3]="Bool",l[l.Array=4]="Array",l[l.Object=5]="Object",l[l.Button=6]="Button",(d=t.SettingItemSubType||(t.SettingItemSubType={})).FilePathAndArgs="file_path_and_args",d.FilePath="file_path",d.DirectoryPath="directory_path",(a=t.AppType||(t.AppType={})).Desktop="desktop",a.Mobile="mobile",a.Cli="cli",(i=t.SettingStorage||(t.SettingStorage={}))[i.Database=1]="Database",i[i.File=2]="File",(n=t.ContentScriptType||(t.ContentScriptType={})).MarkdownItPlugin="markdownItPlugin",n.CodeMirrorPlugin="codeMirrorPlugin"},156:function(e,t,o){var n=this&&this.__awaiter||function(e,t,o,n){return new(o||(o=Promise))((function(i,a){function d(e){try{r(n.next(e))}catch(e){a(e)}}function l(e){try{r(n.throw(e))}catch(e){a(e)}}function r(e){var t;e.done?i(e.value):(t=e.value,t instanceof o?t:new o((function(e){e(t)}))).then(d,l)}r((n=n.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0});const i=o(998),a=o(143),d="fas fa-list-ul";var l;!function(e){e[e.Card=0]="Card",e[e.List=1]="List"}(l||(l={}));const r="todo-view-style";function s(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}function u(e,t,o){const n=0===t.length?`<span class="todo-lesser">No ${e.toLowerCase()} to-dos${"Overdue"===e?"!":"."}</span>`:t.map((e=>function(e,t){let o="<untitled>";e.title&&(o=e.title);let n="No due date";switch(e.todo_due>0&&(n=new Date(e.todo_due).toLocaleString()),t){case l.Card:return`\n            <div class="todo-item">\n                <a class="todo-goto-link" href=# data-id="${s(e.id)}"> \n                    <div class="todo-content">\n                        <div class="todo-title">${s(o)}</div>\n                        <div class="todo-lesser">${s(n)}</div>\n                    </div>\n                </a>\n            </div>\n            `;case l.List:return`\n            <p class="old-todo-item">\n                <a class="todo-goto-link" href=# data-id="${s(e.id)}">${s(o)}</a>\n                <span class="old-todo-lesser">${s(n)}</span>\n            </p>\n            `}}(e,o))).join("\n");return`\n        <h2>${e}<hr></h2>\n        ${n}\n    `}i.default.plugins.register({onStart:function(){return n(this,void 0,void 0,(function*(){yield n(void 0,void 0,void 0,(function*(){const e="todo-view-settings";yield i.default.settings.registerSection(e,{label:"To-do View",iconName:d}),yield i.default.settings.registerSettings({[r]:{section:e,label:"To-do item display style",description:"Card is the modern and default style. List is the older but more compact style.",public:!0,type:a.SettingItemType.Int,value:l.Card,isEnum:!0,options:{[l.Card]:"Card",[l.List]:"List"}}})})),i.default.settings.onChange((e=>n(this,void 0,void 0,(function*(){yield t()}))));const e=yield i.default.views.panels.create("todo_panel");function t(){return n(this,void 0,void 0,(function*(){try{const t=yield function(){return n(this,void 0,void 0,(function*(){const e=["id","todo_due","todo_completed","title","created_time"];let t=[],o=1;for(;;){const n=yield i.default.data.get(["search"],{fields:e,query:"type:todo",page:o});if(t=t.concat(n.items),!n.has_more)break;o++}return t}))}();if(!t||!t.length)return void(yield i.default.views.panels.setHtml(e,'\n                        <div class="container">\n                            <h1>To-do</h1>\n                            \n        <p>Create a to-do to use this plugin.</p>\n        <p>If you want to hide this panel, press the list icon in the toolbar.</p>\n    \n                        </div>\n                    '));const o=function(e){const t=Date.now(),o={overdue:[],upcoming:[],noDueDate:[],completed:[]};e.forEach((e=>{e.todo_completed?o.completed.push(e):e.todo_due?o[e.todo_due>t?"upcoming":"overdue"].push(e):o.noDueDate.push(e)}));const n=(e,t)=>e.todo_due-t.todo_due;return o.overdue.sort(n),o.upcoming.sort(n),o.noDueDate.sort(((e,t)=>e.created_time-t.created_time)),o.completed.sort(((e,t)=>t.todo_completed-e.todo_completed)),o}(t),a=Object.values(o).some((e=>e.length>0)),d=yield i.default.settings.value(r),l=a?`\n                        <h1>To-do</h1>\n                        ${u("Overdue",o.overdue,d)}\n                        ${u("Upcoming",o.upcoming,d)}\n                        ${u("No due date",o.noDueDate,d)}\n                        ${u("Completed",o.completed,d)}\n                    `:"\n                        <h1>To-do</h1>\n                        \n        <p>Create a to-do to use this plugin.</p>\n        <p>If you want to hide this panel, press the list icon in the toolbar.</p>\n    \n                    ";yield i.default.views.panels.setHtml(e,`\n                    <div class="container">\n                        ${l}\n                    </div>\n                `)}catch(e){console.error("Error updating todo view:",e)}}))}yield i.default.views.panels.addScript(e,"./webview.css"),yield i.default.views.panels.addScript(e,"./webview.js"),yield i.default.views.panels.setHtml(e,"Loading todo list..."),yield i.default.views.panels.onMessage(e,(e=>{"openNote"===e.name&&i.default.commands.execute("openNote",e.id)})),i.default.workspace.onNoteChange((()=>{t()})),i.default.workspace.onNoteSelectionChange((()=>{t()})),i.default.workspace.onSyncComplete((()=>{t()})),i.default.workspace.onNoteAlarmTrigger((()=>{t()})),yield i.default.commands.register({name:"toggleTodoView",label:"Toggle to-do view",iconName:d,execute:()=>n(this,void 0,void 0,(function*(){const t=yield i.default.views.panels.visible(e);yield i.default.views.panels.show(e,!t)}))}),yield i.default.views.toolbarButtons.create("toggleTodoViewButton","toggleTodoView",a.ToolbarButtonLocation.NoteToolbar),yield i.default.views.menus.create("todoMenu","To-do",[{label:"Toggle to-do view",commandName:"toggleTodoView",accelerator:"CmdOrCtrl+Shift+T"}]),t()}))}})},998:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=joplin}},t={};!function o(n){var i=t[n];if(void 0!==i)return i.exports;var a=t[n]={exports:{}};return e[n].call(a.exports,a,a.exports,o),a.exports}(156)})();